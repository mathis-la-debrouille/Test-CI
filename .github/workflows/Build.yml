name: Build

on:
    repository_dispatch:
        types: [trigger_build]
    workflow_dispatch:
        inputs:
            printval:
                description: 'valeur Ã  afficher'
                required: false
                type: string

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Super build
              run: |
                if [ -n "${{ github.event.client_payload.printval }}" ]; then
                    echo "Projet A avec la valeur : ${{ github.event.client_payload.printval }}"
                else
                    echo "Projet A avec la valeur : ${{ inputs.printval }}"
                fi

    checkup:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                directory: [
                    service1,
                    service2,
                    service3,
                    service4,
                    service5,
                ]
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 2 # To ensure we have the last two commits

            - name: Install GitHub CLI
              run: |
                sudo apt-get install -y gh

            - name: Check for changes
              id: check_changes
              run: |
                cd src/${{ matrix.directory }}
                if git diff --quiet HEAD^ HEAD .; then
                    echo "Pas de build"
                    echo "::set-output name=build_needed::false"
                else
                    echo "On build"
                    echo "::set-output name=build_needed::true"
            
            - name: Skip job if no changes
              if: steps.check_changes.outputs.build_needed == 'false'
              run: |
                echo "Pas de build - marking as skipped"
              continue-on-error: true
            
            - name: Build process
              if: steps.check_changes.outputs.build_needed == 'true'
              run: |
                echo "On build"
                # Add your build steps here

            - name: Add Label
              if: steps.check_changes.outputs.build_needed == 'true'
              run: |
                # Fetch the pull request or commit details
                PR_NUMBER=$(gh pr view --json number --jq .number || echo "null")
                if [ "$PR_NUMBER" != "null" ]; then
                    # Add a label to the pull request
                    gh pr edit $PR_NUMBER --add-label "${{ matrix.directory }}"
                else
                    # Add a label to the commit
                    gh api repos/${{ github.repository }}/commits/${{ github.sha }}/labels \
                    -f labels="${{ matrix.directory }}"
                fi
              